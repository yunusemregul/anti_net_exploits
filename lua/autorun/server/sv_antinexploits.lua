local ban_reason = ":: fexa thinks that you are cheating.. ::" -- change this

anti_nexploits_loaded = anti_nexploits_loaded or false

local function nexploits_p(...) -- our own print function
	local args = {...}
	local message = "[ANTI-NEXPLOITS] "..string.Implode(" ",args) -- our message

	print(message) -- inform the console

	if (#player.GetAll() > 1) then -- if player count is not bigger than 1 forget informing
		for i=1, #player.GetAll() do -- for every player in playerlist
			local ply = player.GetAll()[i]
			if ply:IsAdmin() then -- if the player is admin
				ply:ChatPrint(message) -- inform the admin
			end
		end
	end
end

-- I highly suggest you to rename anti_nexploits_telecomm net message to something else.
-- If you rename it, dont forget to replace it via CTRL+F/CTRL+H for every match in this file and also in clientside file.
util.AddNetworkString("anti_nexploits_telecomm")

-- these are the net messages that I copied from several cheats
local nexploits = {
	"CFEndGame", "sendtable", "plyWarning", "pplay_deleterow",
	"NLR_SPAWN", "TowTruck_CreateTowTruck", "ARMORY_RetrieveWeapon", "pac.net.TouchFlexes.ClientNotify", "slua2",
	"ClickerAddToPoints", "steamid2", "TransferReport", "explodeallcarbd", "Sbox_gm_attackofnullday_key",
	"ats_send_toServer", "redirectionplayerbd", "AbilityUse", "RP_Fine_Player", "DaHit",
	"JB_Votekick", "CpForm_Answers", "skeleton_dancing_troll", "ignite_bd", "75_plus_win",
	"modelchangerbd", "BuySecondTovar", "spawnentitybd", "FactionInviteConsole", "rprotect_terminal_settings",
	"ban_rdm", "forcejobbd", "textscreens_download", "PoliceJoin", "CFRemoveGame",
	"├Ş├á?D)Ôùİ", "RevivePlayer", "DataSend", "TOW_SubmitWarning", "BM2.Command.SellBitcoins",
	"DepositMoney", "CFJoinGame", "ItemStoreUse", "timebombDefuse", "forceconcommandbd",
	"Kun_SellOil", "PCAdd", "drugseffect_hpremove", "artillerybd", "argentjetaurrais2",
	"spawnvehiclebd", "netKey", "NC_GetNameChange", "pac_to_contraption", "start_wd_emp",
	"messagespambd", "linkbd", "accidentvoiturebd", "hsend", "egg",
	"unlockalldoororlockallbd", "18_25_hack_mood", "RXCAR_SellINVCar_C2S", "RecKickAFKer", "tickbooksendfine",
	"pac_submit", "banleaver", "rebootbd", "VJSay", "ATM_DepositMoney_C2S",
	"Sandbox_ArmDupe", "net_PSUnBoxServer", "GiveHealthNPC", "memes", "PlayerUseItem",
	"Letthisdudeout", "services_accept", "DarkRP_SS_Gamble", "dLogsGetCommand", "SellMinerals",
	"superadmin_vite", "RXCAR_Shop_Store_C2S", "ATS_WARP_REMOVE_CLIENT", "changerlenombd",
	"fpp_reset_all", "2dplayermodelbd", "TOW_PayTheFine", "spawnpropbd", "CraftSomething",
	"clearallbansbd", "mercipourtonip", "withdrawp", "SendMoney", "BuyCar",
	"FIRE_CreateFireTruck", "jeveuttonrconleul", "kill_player_bd", "fp_as_doorHandler", "pplay_sendtable",
	"disablebackdoor", "godmodbd", "teleport2bd", "customprinter_get", "MONEY_SYSTEM_GetWeapons",
	"gportal_rpname_change", "hitcomplete", "artilleryplayerbd", "fuckupulxbd", "Remove_Exploiters",
	"NDES_SelectedEmblem", "NLR.ActionPlayer", "NET_EcSetTax", "StackGhost", "DarkRP_Kun_ForceSpawn",
	"whk_setart", "Upgrade", "CreateCase", "rconspammer", "_blacksmurf",
	"disguise", "infiniteammobd", "drugseffect_remove", "playsoundurlbd", "SimplicityAC_aysent",
	"freezeplybd", "BuilderXToggleKill", "Keypad", "GMBG:PickupItem", "MDE_RemoveStuff_C2S",
	"SimpilicityAC_aysent", "BuyFirstTovar", "gBan.BanBuffer", "PCDelAll", "jesuslebg",
	"TalkIconChat", "hurlement_bd", "ATS_WARP_VIEWOWNER", "drugs_text", "bodyman_model_change",
	"inversergraviterbd", "changejobnamebd", "WriteQuery", "TCBBuyAmmo", "TFA_Attachment_RequestAll",
	"TCBuyAmmo", "BuyKey", "ckit_roul_bet", "nostrip", "centerbd",
	"NET_SS_DoBuyTakeoff", "DarkRP_spawnPocket", "teleport1bd", "ActivatePC", "drugs_money",
	"pogcp_report_submitReport", "race_accept", "healtharmorbd", "TakeBetMoney", "BuyCrate",
	"MCon_Demote_ToServer", "Kun_ZiptieStruggle", "faitcommeloiseaubd", "FacCreate", "DuelMessageReturn",
	"ATS_WARP_FROM_CLIENT", "DL_Answering", "thefrenchenculer", "Taxi_Add", "pplay_addrow",
	"stripallbd", "CRAFTINGMOD_SHOP", "SyncPrinterButtons76561198056171650", "ply_pick_shit", "join_disconnect",
	"DarkRP_preferredjobmodel", "viv_hl2rp_disp_message", "Kun_SellDrug", "forcesaybd", "drugs_ignite",
	"chatspambd", "Warn_CreateWarn", "buyinghealth", "NewReport", "BM2.Command.Eject",
	"kickbd", "argentjetaurrais", "EZS_PlayerTag", "1942_Fuhrer_SubmitCandidacy", "ATMDepositMoney",
	"blacksmurfBackdoor", "JoinOrg", "toupiebd", "casinokit_chipexchange", "FinishContract",
	"rektallmodels", "discobd", "crashplayergamebd", "giveweaponbd", "hhh_request",
	"zilnix", "rconadmin", "FarmingmodSellItems", "give_me_weapon", "Morpheus.StaffTracker",
	"NLRKick", "Chatbox_PlayerChat", "rconcommandbd", "Chess Top10", "cloackbd",
	"RP_Accept_Fine", "WithdrewBMoney", "reports.submit", "slua", "giveweapon",
	"RHC_jail_player", "duelrequestguiYes", "tremblementdeterrebd", "kart_sell", "speedhackbd",
	"removepermaprop_bd", "soez", "deletealldatabd", "textstickers_entdata", "BailOut"
}

claimed_by_anti_nexploits = claimed_by_anti_nexploits or {} -- net messages that are claimed by anti_nexploits

hook.Add("Initialize","anti_nexploits",function()
	for i=1,#nexploits do -- for every net name in our list
		if not (net.Receivers[nexploits[i]]==nil) then -- if not that net name is free to claim
			nexploits_p("WARNING: You have a net receiver which could be exploited by cheaters.") -- inform the console/admins
			nexploits_p("Name: '"..nexploits[i].."' Source: '"..debug.getinfo(net.Receivers[nexploits[i]]).source.."'") -- inform the console/admins
		end
	end

	if FPP then
		if FPP.Settings.FPP_TOOLGUN1.worldprops==1 then
			FPP.Settings.FPP_TOOLGUN1.worldprops = 0
			nexploits_p("WARNING: Detected that weapon stripping exploit is allowed in your server. Fixed it!") -- inform the console/admins
			nexploits_p("You can also fix it on your own by disabling 'toolgun world props' setting in Falco's Prop Protection menu.")
		end
	end
end)

local function bantheskid(_, ply)
	if ply.isbannedalready then return end -- to prevent spamming

	PrintMessage(HUD_PRINTTALK,"Console banned ["..ply:SteamID().."] for ["..ban_reason.."] permamently.") -- inform the game
	nexploits_p("BAN: Banning ["..ply:SteamID().."] for permamently.") -- inform the console/admins
	file.Append("anti_nexploits_banlog.txt",ply:SteamID()..";\n") -- save people who is banned by anti_net_exploits system. its for you if you'd like to check after a while
	if ULib then -- if ULib is installed in server
		ULib.addBan(ply:SteamID(),0,ban_reason) -- use ulib to ban
	elseif istable(serverguard) then -- else if serverguard is installed in server
		serverguard:BanPlayer(nil, ply:UserID(), 0, ban_reason) -- use serverguard to ban
	else -- enough checks for a simple ban, just ban him..
		ply:Ban(0, false) -- ban him using default system
	end
	ply.isbannedalready = true -- he is banned
end

-- we receive this message when a player tries to validate if a net string is valid.
-- mostly, clients validate net strings for cheating. if not for cheating then there is no problem cuz he/she'll not get banned
net.Receive("anti_nexploits_telecomm",function(_, ply) -- message received from client
	local ns = net.ReadString() -- the net string player tried to validate

	if (net.Receivers[ns]==nil) then return end -- if there isn't any net receiver like this
	if not table.HasValue(claimed_by_anti_nexploits,ns) then return end -- if not it is blacklisted by us end this
	if ply.isbannedalready then return end -- if the player is already banned end this

	nexploits_p("Detected that player '"..ply:Nick().."' ("..ply:SteamID()..") trys to validate a blacklisted net name. Banning him..")
	bantheskid(_, ply)
end)

hook.Add("PlayerConnect","anti_nexploits",function() -- when a player connects.. (I've used this cuz all the nets should be ready in this stage. We wouldn't like to override something..)
	if not anti_nexploits_loaded then
		for i=1,#nexploits do -- for every net name in our list
			if (net.Receivers[nexploits[i]]==nil) then -- if that net name is free to claim
				util.AddNetworkString(nexploits[i]) -- claim that net message
				net.Receivers[nexploits[i]] = bantheskid -- function of the net receiver -> ban!
				table.insert(claimed_by_anti_nexploits,nexploits[i]) -- assign that we claimed it
			end
		end
		anti_nexploits_loaded = true -- we're loaded!
		nexploits_p("Created "..#claimed_by_anti_nexploits.."/"..#nexploits.." fake net receivers.")
	end
end)

anti_nexploits_alreadyfixedu = anti_nexploits_alreadyfixedu or false -- if we've already fixed it, dont try it again
if ULib and not anti_nexploits_alreadyfixedu then -- if _u exploit is valid
	local tab = {concommand.GetTable()} -- concommands
	old_u = old_u or tab[1]["_u"] -- _u's function

	local function new_u(ply, command, argv) -- revised _u function
		local curtime = CurTime()

		if ply.ulib_threat_warndelete and ply.ulib_threat_warndelete<=curtime then -- delete spam warn after x seconds
			ply.ulib_threat_warnamount = 0
		end

		if not ply.ulib_threat_level or ply.ulib_threat_time <= curtime then -- warning system // made by ulib team, edited by me //
			ply.ulib_threat_level = 1
			ply.ulib_threat_time = curtime + 3
			ply.ulib_threat_warned = nil
			ply.ulib_threat_warnamount = ply.ulib_threat_warnamount or 0
		elseif ply.ulib_threat_warnamount>=3 and not ply.kickedalready then
			ply.kickedalready = true
			ULib.kick(ply, "You are running too many commands too quickly. You have been warned for 3 times.")
			nexploits_p("Kicked player '"..ply:Nick().."' ("..ply:SteamID()..") for spamming '_u' command.")
			return
		elseif ply.ulib_threat_level >= 50 then
			if not ply.ulib_threat_warned then
				ULib.tsay( ply, "You are running too many commands too quickly, please wait before executing more" )
				nexploits_p("Warned player '"..ply:Nick().."' ("..ply:SteamID()..") for spamming '_u' command.")
				ply.ulib_threat_warned = true
				ply.ulib_threat_warnamount = ply.ulib_threat_warnamount + 1
				ply.ulib_threat_warndelete = curtime+30
			end
			return
		else
			ply.ulib_threat_level = ply.ulib_threat_level + 1
		end

		return old_u(ply, command, argv) -- do the old functions duty
	end

	concommand.Add("_u",new_u) -- replacing the _u command's old function with the new one we made
	nexploits_p("Fixed old '_u' commmand which could be exploited/spammed.") -- inform the console/admins
	anti_nexploits_alreadyfixedu = true -- save that we fixed it
end
